[{"C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\index.js":"1","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\App.js":"2","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Home.js":"3","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Error404.js":"4","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Mobiles.js":"5","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Carrito.js":"6","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Tienda.js":"7","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Headphones.js":"8","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Laptops.js":"9","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Checkout.js":"10","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Productos.js":"11"},{"size":218,"mtime":1631298191269,"results":"12","hashOfConfig":"13"},{"size":6316,"mtime":1631298212444,"results":"14","hashOfConfig":"13"},{"size":152,"mtime":1631264418118,"results":"15","hashOfConfig":"13"},{"size":173,"mtime":1631276137470,"results":"16","hashOfConfig":"13"},{"size":1214,"mtime":1631286741408,"results":"17","hashOfConfig":"13"},{"size":1487,"mtime":1631264368648,"results":"18","hashOfConfig":"13"},{"size":320,"mtime":1631276128430,"results":"19","hashOfConfig":"13"},{"size":1276,"mtime":1631216423158,"results":"20","hashOfConfig":"13"},{"size":1215,"mtime":1631216403991,"results":"21","hashOfConfig":"13"},{"size":2458,"mtime":1631264387716,"results":"22","hashOfConfig":"13"},{"size":1345,"mtime":1606414981639,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"queh4k",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\index.js",[],"C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\App.js",["52"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { NavLink, Switch, Route, BrowserRouter } from 'react-router-dom';\nimport Home from './componentes/Home';\nimport Mobiles from './componentes/Mobiles';\nimport Tienda from './componentes/Tienda';\nimport Error404 from './componentes/Error404';\nimport Carrito from './componentes/Carrito';\nimport Headphones from './componentes/Headphones';\nimport Laptops from './componentes/Laptops';\nimport Checkout from './componentes/Checkout';\n\nconst App = () => {\n\n    const [hide, setHide] = useState(false)\n    const productos = [\n        { id: 1, nombre: 'Producto 1' },\n        { id: 2, nombre: 'Producto 2' },\n        { id: 3, nombre: 'Producto 3' },\n        { id: 4, nombre: 'Producto 4' }\n    ];\n\n    const hideCart = () => {\n        setHide(true)\n    }\n    const unHideCart = () => {\n        setHide(false)\n    }\n    const clearCart = () => {\n        cambiarCarrito([])\n    }\n    const [carrito, cambiarCarrito] = useState([]);\n    // [\n    //     {id: 1s, nombre: 'Producto 1ss', cantidadj: 1},\n    //     {id: 2, nombre: 'Producto 2', cantidad: 2}\n    // ]\n\n    const agregarProductoAlCarrito = (idProductoAAgregar, nombre, price, type) => {\n        // Si el carrito no tiene elementos entonces agregamos uno.\n        if (carrito.length === 0) {\n            cambiarCarrito([{ id: idProductoAAgregar, nombre: nombre, price: price, type: type, cantidad: 1 }]);\n        } else {\n            // De otra foma tenemos que revisar que el carrito no tenga ya el producto que queremos agregar.\n            // Si ya lo tiene entonces queremos actualizar su valor.\n            // Si no tiene el producto entonces lo agregamos.\n\n            // Para poder editar el arreglo tenemos que clonarlo.\n            const nuevoCarrito = [...carrito];\n\n            // Comprobamos si el carrito ya tiene el ID del producto a agregar.\n            const yaEstaEnCarrito = nuevoCarrito.filter((productoDeCarrito) => {\n                return productoDeCarrito.id === idProductoAAgregar\n            }).length > 0;\n\n            // Si ya tiene el producto entonces lo tenemos que actualizar.\n            if (yaEstaEnCarrito) {\n                // Para ello tenemos que buscarlo, obtener su posicion en el arreglo.\n                // Y en base a su posicion ya actualizamos el valor.\n                nuevoCarrito.forEach((productoDeCarrito, index) => {\n                    if (productoDeCarrito.id === idProductoAAgregar) {\n                        const cantidad = nuevoCarrito[index].cantidad;\n                        nuevoCarrito[index] = {\n                            id: idProductoAAgregar,\n                            nombre: nombre,\n                            price: price * (cantidad + 1),\n                            type: type,\n                            cantidad: cantidad + 1\n                        }\n                    }\n                });\n                // De otra forma entonces agregamos el producto al arreglo.\n            } else {\n                nuevoCarrito.push(\n                    {\n                        id: idProductoAAgregar,\n                        nombre: nombre,\n                        price: price,\n                        type: type,\n                        cantidad: 1\n                    }\n                );\n            }\n\n            // Por ultimo actualizamos el carrito.\n            cambiarCarrito(nuevoCarrito);\n        }\n    }\n\n    const removeItemFromCart = (id) => {\n        let data = carrito && carrito.filter(item => item.id !== id)\n        cambiarCarrito(data)\n    }\n\n    return (\n\n        <BrowserRouter>\n            <Container>\n                <Menu >\n                    <NavLink to=\"/\" onClick={hideCart}>Home</NavLink>\n                    <NavLink to=\"/mobiles\" onClick={unHideCart}>Mobiles</NavLink>\n                    <NavLink to=\"/tienda\" onClick={unHideCart}>Tienda</NavLink>\n                    <NavLink to=\"/headphones\" onClick={unHideCart}> Headphones</NavLink>\n                    <NavLink to=\"/laptops\" onClick={unHideCart}> Laptops</NavLink>\n                    <NavLink to=\"/checkout\" onClick={hideCart}> <img src={process.env.PUBLIC_URL + `/Assets/shopping-cart.png`} width='30' /></NavLink>\n                </Menu>\n                <main>\n                    <Switch>\n                        <Route path=\"/\" exact={true} component={Home} />\n                        <Route path=\"/mobiles\">\n                            <Mobiles agregarProductoAlCarrito={agregarProductoAlCarrito} />\n                        </Route>\n                        <Route path=\"/headphones\">\n                            <Headphones agregarProductoAlCarrito={agregarProductoAlCarrito} />\n                        </Route>\n                        <Route path=\"/laptops\">\n                            <Laptops agregarProductoAlCarrito={agregarProductoAlCarrito} />\n                        </Route>\n                        <Route path=\"/tienda\">\n\n                            <Tienda\n                                productos={productos}\n                                agregarProductoAlCarrito={agregarProductoAlCarrito}\n                            />\n                        </Route>\n                        <Route path=\"/checkout\">\n                            <Checkout carrito={carrito} removeItemFromCart={removeItemFromCart} clearCart={clearCart} />\n                        </Route>\n                        <Route component={Error404} />\n                    </Switch>\n                </main>\n                {hide ?\n                    null : <aside>\n                        <Carrito carrito={carrito} hideCart={hideCart} />\n                    </aside>}\n            </Container>\n        </BrowserRouter>\n    );\n}\n\nconst Container = styled.div`\n    max-width: 100%;\n    padding: 40px;\n    width: 100%;\n    display: grid;\n    gap: 20px;\n    grid-template-columns: 2fr 1fr;\n    background: #fff;   \n    border-radius: 10px;\n    box-shadow: 0px 0px 5px rgba(129, 129, 129, 0.1);\n`;\n\nconst Menu = styled.nav`\n    width: 100%;\n    text-align: center;\n    background: #092c4c;\n    grid-column: span 2;\n    border-radius: 3px;\n \n    a {\n        color: #fff;\n        display: inline-block;\n        padding: 15px 20px;\n    }\n \n    a:hover {\n        background: #1d85e8;\n        text-decoration: none;\n    }\n`;\n\nexport default App;","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Home.js",[],"C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Error404.js",[],"C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Mobiles.js",["53","54"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst Mobiles = ({agregarProductoAlCarrito}) => {\r\n\r\n\r\n\tconst [mobiles, setMobiles] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetMobiles()\r\n\t}, [])\r\n\r\n\tasync function simpleFetch(url) {\r\n\r\n\t\treturn await (await fetch(url)).json();\r\n\r\n\t}\r\n\r\n\tasync function getMobiles() {\r\n\t\ttry {\r\n\t\t\tlet response = await simpleFetch('http://localhost:4000/api/mobiles')\r\n\t\t\tif (response) {\r\n\t\t\t\tsetMobiles(response)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Mobiles</h1>\r\n\r\n\t\t\t<div style={{display: 'flex', alignItems: 'center'}}>\r\n\t\t\t{mobiles && mobiles.map(mobile => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t<div style={{fontSize: '18px', fontWeight: 'bold'}}>{mobile?.name}</div>\r\n\t\t\t\t\t\t<div>Price: ${mobile?.price}</div>\r\n\t\t\t\t\t\t<img src={process.env.PUBLIC_URL + `/Assets/mobiles/${mobile?.name}.jpg`} width='150' />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button style={{backgroundColor: 'yellow', padding: '8px 14px'}} onClick={() => agregarProductoAlCarrito(mobile?.id + 'm', mobile?.name, mobile?.price, 'mobiles')}>Add</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Mobiles;","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Carrito.js",["55"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Carrito = ({ carrito, hideCart }) => {\r\n\tlet amount = carrito?.map(a => a.price)\r\n\tlet totalAmount = amount?.reduce((a, b) => a + b, 0)\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>Shopping cart</h3>\r\n\r\n\t\t\t{carrito.length > 0 ?\r\n\t\t\t\tcarrito.map((producto, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Producto key={index}>\r\n\t\t\t\t\t\t\t<NombreProducto>\r\n\t\t\t\t\t\t\t\t{producto.nombre}\r\n\t\t\t\t\t\t\t</NombreProducto>\r\n\t\t\t\t\t\t\t<div>Price: {producto.price}</div>\r\n\t\t\t\t\t\t\t<div>Cantidad: {producto.cantidad}</div>\r\n\r\n\t\t\t\t\t\t\t<img src={process.env.PUBLIC_URL + `/Assets/${producto.type}/${producto.nombre}.jpg`} width='150' />\r\n\r\n\t\t\t\t\t\t</Producto>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t\t:\r\n\t\t\t\t<p>Aun no has agregado productos al carrito</p>\r\n\t\t\t}\r\n\r\n\t\t\t{carrito.length ? <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end' }}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tTotal Amount: {totalAmount}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tAfter Tax: {totalAmount - ((totalAmount * 30) / 100)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Link to='/checkout'>\r\n\t\t\t\t\t\t<button style={{ backgroundColor: 'black', color: 'white' }} onClick={hideCart}>Checkout</button>\r\n\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>: null}\r\n\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nconst Producto = styled.div`\r\n\tpadding: 10px;\r\n\tborder-bottom: 1px solid #ebebf3;\r\n\tfont-size: 14px;\r\n`;\r\n\r\nconst NombreProducto = styled.p`\r\n\tfont-weight: bold;\r\n\tfont-size: 16px;\r\n\tcolor: #000;\r\n`;\r\n\r\nexport default Carrito;","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Tienda.js",[],"C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Headphones.js",["56","57"],"import React, { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nconst Headphones = ({agregarProductoAlCarrito}) => {\r\n\r\n\tconst [headphones, setHeadphones] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetHeadphones()\r\n\t}, [])\r\n\r\n\tasync function simpleFetch(url) {\r\n\r\n\t\treturn await (await fetch(url)).json();\r\n\r\n\t}\r\n\r\n\tasync function getHeadphones() {\r\n\t\ttry {\r\n\t\t\tlet response = await simpleFetch('http://localhost:4000/api/headphones')\r\n\t\t\tif (response) {\r\n\t\t\t\tsetHeadphones(response)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Headphones</h1>\r\n\t\t\t<div style={{display: 'flex', alignItems: 'center'}}>\r\n\t\t\t{headphones && headphones.map(headphone => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t<div style={{fontSize: '18px', fontWeight: 'bold'}}>{headphone?.name}</div>\r\n\t\t\t\t\t\t<div>Price: ${headphone?.price}</div>\r\n\t\t\t\t\t\t<img src={process.env.PUBLIC_URL + `/Assets/headphones/${headphone?.name}.jpg`} width='150' />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button style={{backgroundColor: 'yellow', padding: '8px 14px'}} onClick={() => agregarProductoAlCarrito(headphone?.id + 'h', headphone?.name, headphone?.price, 'headphones')}>Add</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t);\r\n}\r\n \r\nexport default Headphones;","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Laptops.js",["58","59"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst Laptops = ({agregarProductoAlCarrito}) => {\r\n\tconst [laptops, setLaptops] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetLaptops()\r\n\t}, [])\r\n\r\n\tasync function simpleFetch(url) {\r\n\r\n\t\treturn await (await fetch(url)).json();\r\n\r\n\t}\r\n\r\n\tasync function getLaptops() {\r\n\t\ttry {\r\n\t\t\tlet response = await simpleFetch('http://localhost:4000/api/laptops')\r\n\t\t\tif (response) {\r\n\t\t\t\tsetLaptops(response)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Laptops</h1>\r\n\t\t\t\r\n\t\t\t<div style={{display: 'flex', alignItems: 'center'}}>\r\n\t\t\t{laptops && laptops.map(laptop => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div style={{width: '50%'}}>\r\n\t\t\t\t\t\t<div style={{fontSize: '18px', fontWeight: 'bold'}}>{laptop?.name}</div>\r\n\t\t\t\t\t\t<div>Price: ${laptop?.price}</div>\r\n\t\t\t\t\t\t<img src={process.env.PUBLIC_URL + `/Assets/laptops/${laptop?.name}.jpg`} width='150' />\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button style={{backgroundColor: 'yellow', padding: '8px 14px'}} onClick={() => agregarProductoAlCarrito(laptop?.id + 'l', laptop?.name, laptop?.price, 'laptops')}>Add</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t);\r\n}\r\n \r\nexport default Laptops;","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Checkout.js",["60","61","62"],"import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport styled from 'styled-components';\r\n\r\nconst Checkout = ({ carrito, removeItemFromCart, clearCart }) => {\r\n\r\n    let amount = carrito?.map(a => a.price)\r\n    let totalAmount = amount?.reduce((a, b) => a + b, 0)\r\n\r\n    return (\r\n        <div>\r\n            <h3>Carrito de Compras</h3>\r\n            {carrito.length ? <table style={{ width: '100%' }}>\r\n                <thead>\r\n                    <tr>\r\n                        <td style={{ fontWeight: 'bold' }}>Product</td>\r\n                        <td style={{ fontWeight: 'bold' }}>Title</td>\r\n                        <td style={{ fontWeight: 'bold' }}>Quantity</td>\r\n                        <td style={{ fontWeight: 'bold' }}>Price</td>\r\n                        <td style={{ fontWeight: 'bold' }}>Remove</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {carrito?.map(producto => {\r\n                        return (\r\n                            <>\r\n                                <tr>\r\n                                    <td><img src={process.env.PUBLIC_URL + `/Assets/${producto.type}/${producto.nombre}.jpg`} width='150' /></td>\r\n                                    <td>{producto.nombre}</td>\r\n                                    <td>{producto.cantidad}</td>\r\n                                    <td>{producto.price}</td>\r\n                                    <td onClick={() => removeItemFromCart(producto.id)} style={{ color: 'red' }}>Remove</td>\r\n                                </tr>\r\n                            </>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table> : <h4>Nothing in cart! Please Add some items</h4>}\r\n\r\n            {carrito.length ? <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end' }}>\r\n                <div>\r\n                    Total Amount: {totalAmount}\r\n                </div>\r\n                <div>\r\n                    After Tax: {totalAmount - ((totalAmount * 30) / 100)}\r\n                </div>\r\n                <div>\r\n                    <button style={{ backgroundColor: 'black', color: 'white' }} onClick={() => {\r\n                        alert('Thanks for the Shopping')\r\n                        clearCart()\r\n                    }}>Checkout</button>\r\n                </div>\r\n            </div> : null}\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nexport default Checkout;","C:\\Users\\GAM\\Desktop\\E-Shop\\www\\src\\componentes\\Productos.js",[],{"ruleId":"63","severity":1,"message":"64","line":104,"column":65,"nodeType":"65","endLine":104,"endColumn":142},{"ruleId":"66","severity":1,"message":"67","line":10,"column":5,"nodeType":"68","endLine":10,"endColumn":7,"suggestions":"69"},{"ruleId":"63","severity":1,"message":"64","line":38,"column":7,"nodeType":"65","endLine":38,"endColumn":95},{"ruleId":"63","severity":1,"message":"64","line":22,"column":8,"nodeType":"65","endLine":22,"endColumn":108},{"ruleId":"66","severity":1,"message":"70","line":11,"column":5,"nodeType":"68","endLine":11,"endColumn":7,"suggestions":"71"},{"ruleId":"63","severity":1,"message":"64","line":38,"column":7,"nodeType":"65","endLine":38,"endColumn":101},{"ruleId":"66","severity":1,"message":"72","line":8,"column":5,"nodeType":"68","endLine":8,"endColumn":7,"suggestions":"73"},{"ruleId":"63","severity":1,"message":"64","line":36,"column":7,"nodeType":"65","endLine":36,"endColumn":95},{"ruleId":"74","severity":1,"message":"75","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":18},{"ruleId":"74","severity":1,"message":"78","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":28,"column":41,"nodeType":"65","endLine":28,"endColumn":141},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMobiles'. Either include it or remove the dependency array.","ArrayExpression",["79"],"React Hook useEffect has a missing dependency: 'getHeadphones'. Either include it or remove the dependency array.",["80"],"React Hook useEffect has a missing dependency: 'getLaptops'. Either include it or remove the dependency array.",["81"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [getMobiles]",{"range":"88","text":"89"},"Update the dependencies array to be: [getHeadphones]",{"range":"90","text":"91"},"Update the dependencies array to be: [getLaptops]",{"range":"92","text":"93"},[197,199],"[getMobiles]",[211,213],"[getHeadphones]",[193,195],"[getLaptops]"]